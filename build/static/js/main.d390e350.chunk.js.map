{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/ConfirmationPopup.js","utils/Api.js","utils/FormValidator.js","components/App.js","index.js","images/logo.svg"],"names":["Header","className","src","logoPath","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","deleteButtonClassName","likeButtonClassName","type","onClick","onCardDelete","link","onCardClick","name","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","key","onGetCard","Footer","PopupWithForm","closeByEsc","event","keyCode","onClose","useEffect","document","addEventListener","removeEventListener","target","classList","contains","isOpen","id","onSubmit","sizeModifier","noValidate","title","children","button","EditAvatarPopup","avatarRef","useRef","preventDefault","onUpdateAvatar","current","value","required","ref","autoComplete","placeholder","EditProfilePopup","useState","setName","description","setDescription","onUpdateUser","defaultValue","onChange","minLength","maxLength","AddPlacePopup","titleRef","linkRef","ImagePopup","selectedCard","ConfirmationPopup","onRemoveCard","api","options","this","_baseUrl","baseUrl","_headers","headers","result","ok","json","Promise","reject","status","fetch","then","_checkResponse","newName","newJob","method","body","JSON","stringify","newAvatar","cardTitle","cardImage","cardId","isNotLiked","authorization","FormValidator","_validationOptions","validationOptions","_form","querySelector","formSelector","_inputs","Array","from","querySelectorAll","inputSelector","_submitButton","submitButtonSelector","forEach","input","_toggleButtonState","_isInputValid","_hideError","validity","valid","_showError","validationMessage","_hasInvalidInput","add","inactiveButtonClass","setAttribute","remove","removeAttribute","errorMessage","errorElement","inputErrorClass","textContent","errorClass","App","setCurrentUser","setCards","getUserData","user","catch","error","console","getInitialCards","initialCards","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","setSelectedCard","closeAllPopups","avatarFormValidator","profileFormValidator","newCardFormValidator","enableValidation","Provider","changeLike","newCard","newCards","c","avatarInput","patchUserAvatar","patchUserInfo","titleInput","linkInput","postNewCard","deleteCard","filter","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d390e350.chunk.js","sourcesContent":["import React from 'react';\r\nimport logoPath from '../images/logo.svg';\r\n\r\n// ШАПКА\r\n\r\nfunction Header() {\r\n  \r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logoPath} alt=\"Логотип проекта Mesto Russia.\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\n\r\n// КАРТОЧКА\r\n\r\nfunction Card(props) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // статусы карточки (автор, лайк)\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n  function handleClick() { props.onCardClick(props.card) }\r\n  function handleLikeClick() { props.onCardLike(props.card) }\r\n  function handleDeleteClick() { props.onCardDelete(props.card) }\r\n\r\n  const deleteButtonClassName = (`element__delete-button ${!isOwn && \"element__delete-button_hidden\"}`);\r\n  const likeButtonClassName = (`element__like-button ${isLiked && \"element__like-button_active\"}`);\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      <button className={deleteButtonClassName} type=\"button\" onClick={handleDeleteClick} ></button>\r\n      <img className=\"element__image\" src={props.link} alt=\"Пользовательское изображение.\" onClick={handleClick} />\r\n      <div className=\"element__horizontal-alignment\">\r\n        <h2 className=\"element__title\">{props.name}</h2>\r\n        <div className=\"element__vertical-alignment\">\r\n          <button className={likeButtonClassName} type=\"button\" onClick={handleLikeClick} ></button>\r\n          <span className=\"element__like-counter\">{props.likes.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\n\r\n// ОСНОВНОЙ РАБОЧИЙ БЛОК\r\n\r\nfunction Main(props) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__info\">\r\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Пользовательский аватар.\" />\r\n          <div className=\"profile__avatar-overlay\">\r\n            <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__edit-avatar\"></button>\r\n          </div>\r\n          <div className=\"profile__vertical-alignment\">\r\n            <div className=\"profile__horizontal-alignment\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\"></button>\r\n            </div>\r\n            <p className=\"profile__job\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\"></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {props.cards.map(card =>\r\n          <Card\r\n            key={card._id}\r\n            card={card}\r\n            name={card.name}\r\n            link={card.link}\r\n            likes={card.likes}\r\n            onCardClick={props.onGetCard}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n// ПОДВАЛ\r\n\r\nfunction Footer() {\r\n  \r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n// ПОПАП С ФОРМОЙ (БАЗОВЫЙ ШАБЛОН)\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  // закрытие по клику на оверлей\r\n  function closeByOverlayClick(event) {\r\n    if (event.target.classList.contains('popup')) props.onClose();\r\n  }\r\n\r\n  // закрытие по нажатию Esc\r\n  function closeByEsc(event) {\r\n    if (event.keyCode === 27) {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"keydown\", closeByEsc);\r\n    return () => { document.removeEventListener(\"keydown\", closeByEsc) };\r\n  });\r\n\r\n  return (\r\n    <div onClick={closeByOverlayClick} className={`popup ${props.isOpen && \"popup_opened\"}`} id={`${props.name}-popup`}>\r\n      <form onSubmit={props.onSubmit} className={`popup__container ${props.sizeModifier}`} id={`${props.name}-form`} noValidate >\r\n        <button onClick={props.onClose} type=\"button\" className=\"popup__close-button\"></button>\r\n        <p className=\"popup__title\">{props.title}</p>\r\n        {props.children}\r\n        <button type=\"submit\" className=\"popup__submit-button\" id={`${props.name}-submit`}>{props.button}</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\n// ПОПАП ОБНОВЛЕНИЯ АВАТАРА\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  const avatarRef = React.useRef();\r\n\r\n  // обработка сабмита\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={props.name}\r\n      title={props.title}\r\n      button={props.button}\r\n      sizeModifier={props.sizeModifier}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit} >\r\n\r\n      <label className=\"popup__input-alignment\">\r\n        <input\r\n          required ref={avatarRef} autoComplete=\"off\"\r\n          id=\"avatar\" name=\"avatar\" className=\"popup__input\"\r\n          type=\"url\" placeholder=\"Ссылка на аватар\" />\r\n        <span id=\"avatar-error\" className=\"popup__error\"></span>\r\n      </label>\r\n\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\n// ПОПАП РЕДАКТИРОВАНИЯ ПРОФИЛЯ\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  // инпут с именем\r\n  function handleChangeName(event) {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  // инпут с профессией\r\n  function handleChangeDescription(event) {\r\n    setDescription(event.target.value)\r\n  }\r\n\r\n  // обработка сабмита\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={props.name}\r\n      title={props.title}\r\n      button={props.button}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit} >\r\n\r\n      <label className=\"popup__input-alignment\">\r\n        <input\r\n          required defaultValue={name} onChange={handleChangeName}\r\n          id=\"name\" name=\"name\" className=\"popup__input\" autoComplete=\"off\"\r\n          type=\"text\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" />\r\n        <span id=\"name-error\" className=\"popup__error\"></span>\r\n      </label>\r\n\r\n      <label className=\"popup__input-alignment\">\r\n        <input\r\n          required defaultValue={description} onChange={handleChangeDescription}\r\n          id=\"job\" name=\"job\" className=\"popup__input\" autoComplete=\"off\"\r\n          type=\"text\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" />\r\n        <span id=\"job-error\" className=\"popup__error\"></span>\r\n      </label>\r\n\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\n// ПОПАП ДОБАВЛЕНИЯ НОВОЙ КАРТОЧКИ\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n  const titleRef = React.useRef();\r\n  const linkRef = React.useRef();\r\n\r\n  // обработка сабмита\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onAddPlace({\r\n      title: titleRef.current.value,\r\n      link: linkRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={props.name}\r\n      title={props.title}\r\n      button={props.button}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit} >\r\n\r\n      <label className=\"popup__input-alignment\">\r\n        <input\r\n          required ref={titleRef} autoComplete=\"off\"\r\n          id=\"title\" name=\"title\" className=\"popup__input\"\r\n          type=\"text\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" />\r\n        <span id=\"title-error\" className=\"popup__error\"></span>\r\n      </label>\r\n\r\n      <label className=\"popup__input-alignment\">\r\n        <input\r\n          required ref={linkRef}\r\n          id=\"link\" name=\"link\" className=\"popup__input\"\r\n          type=\"url\" placeholder=\"Ссылка на картинку\" autoComplete=\"off\" />\r\n        <span id=\"link-error\" className=\"popup__error\"></span>\r\n      </label>\r\n\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\n\r\n// ПОПАП ПОЛНОРАЗМЕРНОЙ КАРТИНКИ\r\n\r\nfunction ImagePopup(props) {\r\n\r\n  // закрытие по клику на оверлей\r\n  function closeByOverlayClick(event) {\r\n    if (event.target.classList.contains('popup')) props.onClose();\r\n  }\r\n\r\n  // закрытие по нажатию Esc\r\n  function closeByEsc(event) {\r\n    if (event.keyCode === 27) props.onClose();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"keydown\", closeByEsc);\r\n    return () => { document.removeEventListener(\"keydown\", closeByEsc) };\r\n  });\r\n\r\n  return (\r\n    <div onClick={closeByOverlayClick} className={`popup ${props.isOpen && \"popup_opened\"}`} id=\"image-popup\">\r\n      <div className=\"popup__image-container\">\r\n        <button onClick={props.onClose} className=\"popup__close-button\" type=\"button\"></button>\r\n        <img className=\"popup__image\" src={props.selectedCard.link} alt=\"Пользовательское изображение.\" />\r\n        <p className=\"popup__image-title\">{props.selectedCard.name}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\n// ПОПАП ПОДТВЕРЖДЕНИЯ УДАЛЕНИЯ КАРТОЧКИ\r\n\r\nfunction ConfirmationPopup(props) {\r\n\r\n  // обработка сабмита\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onRemoveCard();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={props.name}\r\n      title={props.title}\r\n      button={props.button}\r\n      sizeModifier={props.sizeModifier}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit} >\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default ConfirmationPopup;","class Api {\r\n\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  // проверка ответа от сервера\r\n  _checkResponse(result) {\r\n    if (result.ok) { return result.json() }\r\n    else { return Promise.reject(`Ошибка: ${result.status}`) }\r\n  }\r\n\r\n  // получение информации о пользователе (имя, профессия, аватар)\r\n  getUserData() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n      .then(result => { return this._checkResponse(result); })\r\n  }\r\n\r\n  // обновление информации о пользователе (имя, профессия)\r\n  patchUserInfo(newName, newJob) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: newName,\r\n        about: newJob\r\n      })\r\n    })\r\n      .then(result => { return this._checkResponse(result); })\r\n  }\r\n\r\n  // обновление аватара\r\n  patchUserAvatar(newAvatar) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: newAvatar\r\n      })\r\n    })\r\n      .then(result => { return this._checkResponse(result); })\r\n  }\r\n\r\n  // запрос карточек с сервера\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    })\r\n      .then(result => { return this._checkResponse(result); })\r\n  }\r\n\r\n  // добавление новой карточки\r\n  postNewCard(cardTitle, cardImage) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: cardTitle,\r\n        link: cardImage\r\n      })\r\n    })\r\n      .then(result => { return this._checkResponse(result); })\r\n  }\r\n\r\n  // удаление карточки\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(result => { return this._checkResponse(result); })\r\n  }\r\n\r\n  // постановка/снятие лайка\r\n  changeLike(cardId, isNotLiked) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: isNotLiked ? 'PUT' : 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(result => { return this._checkResponse(result); })\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n  headers: {\r\n    authorization: '41d7f09e-77c9-4cd2-9eb8-a7dd1866e16a',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","export class FormValidator {\r\n\r\n  constructor(options) {\r\n    this._validationOptions = options.validationOptions;\r\n    this._form = document.querySelector(options.formSelector);\r\n    this._inputs = Array.from(this._form.querySelectorAll(this._validationOptions.inputSelector));\r\n    this._submitButton = this._form.querySelector(this._validationOptions.submitButtonSelector);\r\n  }\r\n\r\n  enableValidation() {\r\n    this._inputs.forEach((input) => {\r\n      this._toggleButtonState(this._submitButton);\r\n      input.addEventListener('input', () => {\r\n        this._isInputValid(input);\r\n        this._toggleButtonState(this._submitButton);\r\n      });\r\n    });\r\n  }\r\n\r\n  resetValidation() {\r\n    this._toggleButtonState(this._submitButton);\r\n    this._inputs.forEach((input) => {\r\n      this._hideError(input);\r\n    });\r\n  }\r\n\r\n  _isInputValid(input) {\r\n    if (!input.validity.valid) {\r\n      this._showError(input, input.validationMessage);\r\n    } else {\r\n      this._hideError(input);\r\n    }\r\n  }\r\n\r\n  _toggleButtonState() {\r\n    if (this._hasInvalidInput(this._inputs)) {\r\n      this._submitButton.classList.add(this._validationOptions.inactiveButtonClass);\r\n      this._submitButton.setAttribute('disabled', true);\r\n    } else {\r\n      this._submitButton.classList.remove(this._validationOptions.inactiveButtonClass);\r\n      this._submitButton.removeAttribute('disabled');\r\n    }\r\n  }\r\n\r\n  _hasInvalidInput() {\r\n    return this._inputs.some((input) => {\r\n      return !input.validity.valid;\r\n    });\r\n  }\r\n\r\n  _showError(input, errorMessage) {\r\n    const errorElement = this._form.querySelector(`#${input.id}-error`);\r\n    input.classList.add(this._validationOptions.inputErrorClass);\r\n    errorElement.textContent = errorMessage; \r\n    errorElement.classList.add(this._validationOptions.errorClass);\r\n  }\r\n\r\n  _hideError(input) {\r\n    const errorElement = this._form.querySelector(`#${input.id}-error`);\r\n    input.classList.remove(this._validationOptions.inputErrorClass);\r\n    errorElement.classList.remove(this._validationOptions.errorClass);\r\n    errorElement.textContent = ''; \r\n  }\r\n\r\n}\r\n\r\nexport const validationOptions = {\r\n  formSelector: '.popup__container',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__submit-button',\r\n  inactiveButtonClass: 'popup__submit-button_disabled',\r\n  inputErrorClass: 'popup__input_invalid',\r\n  errorClass: 'popup__error_visible'\r\n};","import React from 'react';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport AddPlacePopup from './AddPlacePopup.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport ConfirmationPopup from './ConfirmationPopup.js';\r\nimport api from '../utils/Api.js';\r\nimport { FormValidator, validationOptions } from '../utils/FormValidator.js';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\n\r\n// КОРНЕВОЙ КОМПОНЕНТ\r\n\r\nfunction App() {\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  // получаем данные пользователя при запуске приложения\r\n  React.useEffect(() => {\r\n    api.getUserData()\r\n      .then(user => setCurrentUser(user))\r\n      .catch(error => console.error(error))\r\n  }, []);\r\n\r\n  // получаем карточки с сервера при запуске приложения\r\n  React.useEffect(() => {\r\n    api.getInitialCards()\r\n      .then(initialCards => setCards(initialCards))\r\n      .catch(error => console.error(error))\r\n  });\r\n\r\n  // статусы попапов (открыт/закрыт)\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\r\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = React.useState(false);\r\n\r\n  // определяем текущую карточку (используется для её удаления или для открытия в полном размере)\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  // закрытие попапов\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsImagePopupOpen(false);\r\n    setIsConfirmationPopupOpen(false);\r\n    setSelectedCard({});\r\n  };\r\n\r\n  // открытие попапа с полноразмерной картинкой\r\n  function handleOpenImage(card) {\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  }\r\n\r\n  // обновление аватара\r\n  function handleUpdateAvatar({ avatar }) {\r\n    const avatarInput = document.querySelector('#avatar');\r\n    api.patchUserAvatar(avatar)\r\n      .then((user) => {\r\n        document.querySelector('.profile__avatar').src = user.avatar;\r\n        closeAllPopups();\r\n        avatarInput.value = '';\r\n      })\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  // обновление профиля\r\n  function handleUpdateUser({ name, about }) {\r\n    api.patchUserInfo(name, about)\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n        closeAllPopups();\r\n      })\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  // добавление новой карточки\r\n  function handleAddPlaceSubmit({ title, link }) {\r\n    const titleInput = document.querySelector('#title');\r\n    const linkInput = document.querySelector('#link');\r\n    api.postNewCard(title, link)\r\n      .then((newCard) => {\r\n        setCards([...cards, newCard]);\r\n        closeAllPopups();\r\n        titleInput.value = '';\r\n        linkInput.value = '';\r\n      })\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  // лайк карточки\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLike(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  // клик по корзине\r\n  function handleDeleteClick(card) {\r\n    setSelectedCard(card);\r\n    setIsConfirmationPopupOpen(true);\r\n  }\r\n\r\n  // удаление карточки\r\n  function handleRemoveCard() {\r\n    api.deleteCard(selectedCard._id)\r\n      .then(() => {\r\n        const newCards = cards.filter(c => c._id !== selectedCard._id);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  // включаем валидацию форм\r\n  React.useEffect(() => {\r\n    const avatarFormValidator = new FormValidator({\r\n      validationOptions: validationOptions,\r\n      formSelector: '#avatar-form'\r\n    });\r\n    \r\n    const profileFormValidator = new FormValidator({\r\n      validationOptions: validationOptions,\r\n      formSelector: '#profile-form'\r\n    });\r\n\r\n    const newCardFormValidator = new FormValidator({\r\n      validationOptions: validationOptions,\r\n      formSelector: '#new-card-form'\r\n    });\r\n\r\n    avatarFormValidator.enableValidation();\r\n    profileFormValidator.enableValidation();\r\n    newCardFormValidator.enableValidation();\r\n  });\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header />\r\n\r\n        <Main\r\n          cards={cards}\r\n          onEditAvatar={() => setIsEditAvatarPopupOpen(true)}\r\n          onEditProfile={() => setIsEditProfilePopupOpen(true)}\r\n          onAddPlace={() => setIsAddPlacePopupOpen(true)}\r\n          onGetCard={handleOpenImage}\r\n          onCardDelete={handleDeleteClick}\r\n          onCardLike={handleCardLike}\r\n        />\r\n\r\n        <Footer />\r\n\r\n        <EditAvatarPopup // попап обновления аватара\r\n          name='avatar'\r\n          title='Обновить аватар'\r\n          button='Сохранить'\r\n          sizeModifier='popup__container_medium'\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <EditProfilePopup // попап обновления профиля\r\n          name='profile'\r\n          title='Редактировать профиль'\r\n          button='Сохранить'\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n\r\n        <AddPlacePopup // попап добавления новой карточки\r\n          name='new-card'\r\n          title='Новое место'\r\n          button='Сохранить'\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n        <ConfirmationPopup // попап подтверждения удаления карточки (сейчас вообще не работает)\r\n          name='confirmation'\r\n          title='Вы уверены?'\r\n          button='Да'\r\n          sizeModifier='popup__container_small'\r\n          isOpen={isConfirmationPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onRemoveCard={handleRemoveCard}\r\n        />\r\n\r\n        <ImagePopup // попап полноразмерной картинки\r\n          isOpen={isImagePopupOpen}\r\n          selectedCard={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}